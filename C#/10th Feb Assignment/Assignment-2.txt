Assignment No : 2
Create a class for product :

All the products have pcode, pname, qty_in_stock,discount_allowed(which is different for evry product, and once it is set for one product, it shall remian same, brand (which is common for every one, and all the products are different for every brand.

Add appropriate methods :
1)For Taking Inputs from Customers
2)calculate total amount , also while calculating total amount, as today is 26th Jan, Company wants to give a discount of 50% on all the products..Take care of  that while calculating total amount to be paid...
3)produce bill..


Create a Class Product

Collection of Products, atleast store 10 records

After that customer will place order

At this this time customer will only give product name
Enter Qty to take: 

We have prepare Bill for that

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp1
{
    class Product
    {
        public int pCode;
        public int qtyInStock;
        public readonly double discountAllowed;
        public static String brand;
        public String productName;
        double price;

        public Product() { }

        public Product(int pCode, String productName, int qtyInStock, int price, double discountAllowed)
        {
            this.pCode = pCode;
            this.qtyInStock = qtyInStock;
            this.price = price;
            this.discountAllowed = discountAllowed;
            this.productName = productName;
        }

        public void Calculatetotalamount(Product product, int qty)
        {
            double amount;
            amount = (product.price * qty) - product.discountAllowed;
            double total_amount = amount * (50 / 100);
            total_amount = amount - total_amount;
            Printbill(product, qty, total_amount);
        }

        public void Printbill(Product product, int qty, double total_amount)
        {
            Console.WriteLine("Product Name  \t\t Quantity \t Price \t\t Total Amount");
            Console.WriteLine("{0,-13} \t\t {1,-8} \t {2,-5} \t\t {3}", product.productName, qty, product.price, total_amount);
        }
    }
}


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp1
{
    class Program
    {
        static List<Product> productlist;

        static void Main()
        {
            // Collection Initializer
            productlist = new List<Product>()
            {
                new Product(1001, "Pen", 900, 50, 10),
                new Product(1002, "Notebook", 1500, 200, 50),
                new Product(1003, "Pencil", 1000, 15, 5),
                new Product(1004, "Eraser", 500, 5, 2),
                new Product(1005, "Sharpener", 600, 10, 5),
                new Product(1006, "Scale", 500, 20, 5),
                new Product(1007, "Pencil Box", 500, 250, 50),
                new Product(1008, "Geometry Box", 400, 300, 70),
                new Product(1009, "Sketch Book", 150, 500, 100),
                new Product(1010, "Color Pencils", 300, 100, 20)
              };

            Console.WriteLine("List of Items");
            Console.WriteLine("Product Name \t   Quantity in stock");

            foreach (Product temp in productlist)
            {
                Console.WriteLine("{0,-13} \t   {1}"  ,temp.productName, temp.qtyInStock); ;
            }

            int qty;
            string pname;
            Console.Write("\nEnter product name: ");
            pname = Console.ReadLine();
            Console.Write("\nEnter quantity: ");
            qty = Convert.ToByte(Console.ReadLine());
            Console.WriteLine();
            Product productToPurchase = SearchProduct(pname, qty);


            if (productToPurchase != null)
            {
                Product product = new Product();
                product.Calculatetotalamount(productToPurchase, qty);
            }
            else
                Console.WriteLine("Product Not Found Or Quantity Is Insufficient");
        }

        static Product SearchProduct(string pname, int qty)
        {
            Product product = null;

            foreach (Product temp in productlist)
            {
                if (temp.productName == pname)
                {
                    product = temp;
                    ////if (qty <= temp.qtyInStock)
                    ////    Console.WriteLine(temp.productName + " : Quantity in stock = \t" + temp.qtyInStock); 
                    //else
                    //    product = null;
                }
            }
            return product;
        }
    }
}


